name: Meta-CI

on:
  push:
    branches: [ master, devel ]
  pull_request:

env:
  CXX: clang++
  CC: clang

jobs:
  format-check:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Format source code
        run: |
          find demo lib test \
            -type f \
            -a \( -name "*.c" -o -name "*.cpp" -o -name "*.h" \) \
            -print0 \
            | xargs -0 clang-format-14 -i

      - name: Format check
        run: |
          git status --porcelain --untracked-files=no
          git status --porcelain --untracked-files=no | xargs -o -I {} test -z \"{}\"

  codespell:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - uses: codespell-project/actions-codespell@master

  lit-suite:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        llvm-version: [ 14 ]
        preset:
          - name: develop

    steps:
      - uses: actions/checkout@v3

      - name: Update apt
        run: sudo apt-get update

      - name: Install LLVM
        run: sudo apt-get install libllvm${{ matrix.llvm-version }} llvm-${{ matrix.llvm-version }} llvm-${{ matrix.llvm-version }}-dev

      - name: Install Clang
        run: sudo apt-get install clang-${{ matrix.llvm-version }} clang-tidy-${{ matrix.llvm-version }}

      - name: Setup env
        run: |
          sudo ln -f -s /usr/bin/clang-${{ matrix.llvm-version }} /usr/bin/clang
          sudo ln -f -s /usr/bin/clang++-${{ matrix.llvm-version }} /usr/bin/clang++
          echo "LLVM_CMAKE_DIR=/usr/lib/llvm-${{ matrix.llvm-version }}/cmake" >> $GITHUB_ENV
          echo "EXTERNAL_LIT=/usr/lib/llvm-${{ matrix.llvm-version }}/build/utils/lit/lit.py" >> $GITHUB_ENV

      - name: Configure Meta
        run: cmake -B build --preset ${{ matrix.preset.name }} -DLLVM_DIR=${LLVM_CMAKE_DIR} -DLLVM_EXTERNAL_LIT=${EXTERNAL_LIT}

      - name: Build Meta
        run: cmake --build build --parallel 2

      - name: Test with lit-suite
        run: cmake --build build --target check-meta
